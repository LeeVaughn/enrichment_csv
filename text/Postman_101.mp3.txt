Hey, everyone, welcome to the Postman 101 Webinar. Before I get started, let's quickly cover a few housekeeping items. If you have any questions, we will have a Q and a session at the end, so please submit questions that pops up during the Webinar. I have several colleagues on the line to help you answer questions during the Webinar, we have solutions, engineers, product support, customer success, and so on. Everyone on here is on mute except me, so please use the Q and a feature. This session is up to an hour long, so if you need to drop off, this webinar is recorded and will be shared with you later on. So it's up to you if you would like to follow along with my examples or sit back and enjoy the show. So my name is Voon Wynn and I'm the product advocate at Postman. You're probably wondering what's a product advocate. I work in our developer marketing team, and I serve as an expert on the key use cases and features of the Postman platform. So I'll help you engage you through the Postman app and provide guidance on the best solutions for your API development needs. So this includes solving problems on Postman and enabling you to maximize benefits provided by our tour. So if you ever want to chat or send me any feedback directly, feel free to do so on my Twitter account here. All right, let's get started. So today's Webinar is for people getting started with postspan or whoever wants to use it more. So if you click on this email invite to attend the Webinar or by mistake, we welcome you to join the Webinar and hope you have a good time. As Jimmy Fallon says, welcome to the Webinar. Welcome. So for today's agenda, first we'll go over what is posted. We'll talk about APIs and Endpoints, and then we'll talk about features. Next we'll be getting started on the section where we'll go over how to use and navigate the Postman app. We'll show you how to use the launchpad and easily find features. I'll go through a live demo and make some API calls or even use the Game of Thrones collections for fun. Then we'll go over some tips and tricks that we learn from our community. I'll show you how developers use features like environments, code snippets in the app as well as generating documentation. Then we'll go over resources. This will help you find the right information. If you have any questions in your development, we have an amazing community of over 12 million developers, and last, but not least, we'll have a Q and a session to answer questions you may have. So since we'll be talking a lot about APIs, I want to make sure we're all on the same page. An application programming interface or an API is something that sends information back and forth between a service and a user. An API allows two systems to communicate with one another. For instance, you send information to a server and you receive a response, usually in a JSON format. An example would be a weather API for temperature and forecast in your city. Another example maps API to retrieve geocerness or directions. So next, what is an API endpoint? This is where the API connects to a software program, so an endpoint could be like a Ul or a server. I'll be using these terms a lot, so I will make sure we're all on the same page. So now that you know what API is, what is Postman? So Postman started simply as a side project to solve a specific problem. Albert Of, Astana Postman CEO and co founder, set out to create a tool that will simplify the API testing process. As Postman's usage quickly exploded, Albinov recruited two of his former colleagues to help him create Postman. Now Postman is the world's leading collaboration platform for API development, used by over 12 million developers across 500,000 companies to build, test, and deploy APIs. So I want to share a personal story about my Postman experience. I did not come from a traditional technical background that a developer went through. I found out about Postman from a colleague over five years ago when Postman was an extension app on the Chrome browser. Before I had used Postman, I had a problem where I needed to test out an API. However, the only option I had at the time was to download the Java sample app, install Eclipse, and launch a Maven project. I learned Java in 4 hours. Yeah, that didn't happen, so instead I quickly installed Postman plugged in the API endpoint and authentication keys and made the API requests I need to test all within minutes from there, I became very familiar with APIs and started presenting other APIs to software developers using Postman as it's like a universal programming language for me. The reason why I'm sharing this story is because I was able to learn and use APIs. Thanks to Postman. This tool is meant to be very user and newbie friendly so anyone can learn it. We have an amazing community to help you through any questions you may have. So this is how I felt about APS prior to using Postman. I knew nothing, so now let's get started. We will begin with an overview of the Postman app and go through the features on where to get started. We'll review the Launchpad workspaces collections and the API builder. So we'll start with the launch pad from Postman where we can show you most of Postman's features. Let me switch to that app. So once you open up Postman, this is what you'll see here the launchpad. So it's a welcome message and towards the middle, you'll see a couple of features where you can create a request, create a collection and environment. As you Hover towards the right side, you'll see a couple of lessons. This is called a boot camp where you'll be able to learn a lot of the cool features I highly recommend going through this. It will be a solid 30 to 40 minutes of your time to just learn all these great features we have. As you scroll down, you'll see our resources and events. So for example, we have a huge Galaxy conference coming up, and we also have blog posts here. And once you click events, you'll see Webinars and what's coming ahead. As you scroll down, you can discover templates and APIs that we recommend from our customers. So now when you scroll back up, you'll see workspaces. So think of a workspace where it allows you to organize and collaborate on API projects with your team. Within workspaces, you can share APIs collections, environments and components within postman. So for myself, here's my personal workspace, and then for teams, I can join different teams. So for example, if I want to join The Seven Kingdoms, I can join different projects while I have different colleagues here on the line to help me. So think of project. Sorry workspaces as a project. So usually when I start a new collection, I just create a brand new project and I just click new for teams. I have the option to invite my colleagues by putting the email or I just keep it personal. So since I have a workspace, I will continue using that. So next we'll go over the collections on the left hand column. So think of Collections as one of the starting points in postman to store all your requests. So it's like a folder of APIs for you to add. So you can quickly create a new collection by clicking this Orange button here. It will pop up and I will type in Webinar collection and I can add description or collection here. So notice on the left hand column a new collection was added. So we'll go with this in a few minutes. I just want to go over one more thing, which is the API builder. So this API's tab here is what it is exactly as it looks like. You can create an API or you can build it. I also call it API Builder because you can design and create APIs from scratch. So think of this as a single source of truth where your specs can act as a single source of two point API projects. The API Builder supports API first development by allowing you to generate collections from your schema and you can build your development testing from there. We won't go through the details. This is a more of an advanced topic, and since this is a one on one session, you can check out our many tutorials and videos on our website to learn more. So let me go back to the slides. So now that we went over some of the basics, we will go over creating collections and sending requests. So let me go back to will go over API methods. So such as get post put, delete. We'll talk about parameters, authorization types, headers, and the body. So within postman I will go back to my collections tab, so I would click this folder and I will click Add request. So think of a request as how it allows you to retrieve data from a data source or send data. So let me just create new request here. So notice how this tab was created, and once I clicked it, a new request tab was created here. So here's a name and this is where you put in the type of request. So for APIs, most of the times it will be get post put or delete, and this is where you put in your URL. So I will use one of our in house APIs of postman Echo and I will click send. So postman Echo real quick. It's one of our APIs where it's like a Ping pong API. If you send something, it will Echo back a response. So notice here down here at the bottom within the body value. I received the response with the postman Echo URL that I just added. So within that I was able to receive my status. 200k. 200 is my favorite number in the API. So every time I see 200 is always a good thing. I'll see the latency time and I'll see the size of the response. So sometimes I noticed that APIs try to keep the sizes small just to not overload the servers. So you may add different params to paginate the responses. So jumping straight to params. Think of params as options that can be passed with endpoint to influence the response. So for example, if I type in name and I type in John Snow as a value, so notice how on the upper side there was a question Mark that was added with the name key here equal sign and John Snow because it reads off the URL and I will click Send and notice how within my new request within the body there was an argument with the name John Snow. So this is letting the server know within the URL that I was setting for name because John Snow. So this is a basic example. We'll go through other types of examples later on the webinar. So next we'll talk about authentication. So within APIs there's multiple authentication types just because APIs have different methods. So for example, you can choose bearer tokens. You can choose all off. 2.0. You can choose even no off, which is the example I'm using here. So it's really up to the API specs. And then for headers. Some APIs require you to send particular headers that's not shown in the URL. So quite similar to the parameters value. So for example, I've seen examples where there'll be versions, the barrel access token, even the client ID or client secret keys here and next will be the body value. Typically, a body value will be used with a post call. So let's make a call right here. So I will name it. Actually. Let me select post method. I will type in postman Echo com post and I will go to the body value here. So by default it's selected as none. I would click Raw and the type I will click JSON so I'll open up a curly bracket enter. Let's see. I'll go to open up quotations and let's see type in John's note. So I forgot a comma status is alive and I will send it. So notice that this was a post request, how it sends a payload data to the server using the body value. So sometimes I've seen examples where it has sensitive information because it's not shown in the URL and within the response is shown here as a data payload. So again, this is just a basic example of all the settings and headers within postman. So next I want to go over how to send a request with test scripts. And using test snippets. We'll check out templates and API network and then brace yourselves. We'll be playing with an API for Game of Thrones. So I'll go back to my get request. So within these settings here I will click test and then notice how on the right hand side let me move this down a little bit. We have a couple of test scripts here. So think of test scripts or as ways to automate your endpoints. So for example, within test scripts, you can pass data between requests to automate API flows. These test scripts use a Chi JavaScript library to run the code. So for example, I can get an environment variable. I can set an environment variable. I can make sure that the status code is 200, or even the response time is less than 200. So let's actually click it. I will click status code, go to 200 within it. It's automatically set. So notice how within this test results here it shows one out, one. So it passed because my status code was 200. So let me add another test code where I will make sure the response times less than 200. And I'll run the test again. And yes, it was successful. So what if I wanted to change this to 400 kwh here? Oh, sorry, I did not. I pushed the wrong button here and I will send. So notice how the first test failed because I had set it to 400. However, the status quo was 200. So the system let me know that had failed. However, the second test passed because I had set it to less than 400 milliseconds, but the time was 85 milliseconds. So you can run a lot of test cases here. Postman is very click and pace friendly, so you can just click and go all within seconds. So less coding on your side. So now that we went through a test, I want to quickly go over API networks and templates. So in the upper left hand corner. If you click new, you'll see by default go to create new, but then you'll see a template and the API network. So Postman has a marketplace of collections within the API network. Developers can create and publish collections to share. Templates are more for individual projects, whereas Collections and the API network are more for team projects by companies. So think of this as the API marketplace with pre built collections to quickly get started. So now to Game of Thrones, I will type in a collection game of Thrones in the search I will scroll down to the Game of Thrones. So this is the collection I added for Game of Thrones fans. No authentication needed. Let's click it. So make sure that the publishers myself so quickly before I go into this. I did not create this API. This was created by my Swedish developer. If you want to learn more about his API, check out this page here so I would click run in postman notice on the bottom right hand corner status was added that the collection was imported correctly and now under the Collections tab. A Game of Thrones collection was added so I'm able to add characters, so I'm click on the character request. There's also a request for books and houses. So by default I had added a couple of Prams, so let me move this over, added the key, the value, even descriptions to help you be able to search correctly. So if I click Send, let me scroll up here. I'm able to see a bunch of responses within this API. So what if I wanted to know more details about Daenerys Targaryen? I had set her name within the URL and I had put her name Daenerys Targaryen within the value so I would click send and here within the JSON response. Her name is Daenerys Targaryen. She was born in 172 AC titles of Princess so I can learn a lot of details about it. So for example, I'm able to look at the titles, all of her aliases. If she ever has any names, I forget and as well as other information. So this is a fun example. Feel free to test it out. Something I didn't mention earlier is that this API doesn't have authentication methods, so that's why I'm able to run it freely. You can do so yourself again. I just went to new under templates. I just Typed in Game of Thrones and it will pop up within the couple first search results and click here and run in Postland. Cool. I hope you have fun now back to the slides. So tips and tricks. So we'll go over some environments and variables. We'll talk about code snippets, we'll talk about generating documentation and visualizing responses. So let me go back to the app. So in the upper right hand corner there's a section where you Hover over it'll say manage environments. If you click it. This is your environment section. So think of environments as a set of variables where variables allow you to store and reuse values in your request. So earlier actually, 1 second. So let me create this. I will go to add value. And what if I wanted to not type in full values? I will type in Danny, make it easier to remember Danny. And then for the initial value I retyped in Dan nervous, I Typed in her name wrong. So something to quickly mention is that the initial value if you Hover over here, these are shared with your team across the collections environments and workspaces. So if you're working on a collaboration with your teammates, you can use initial value. However, if you're using sensitive data that you don't want to share with your teammates, just put in your current value, so I will click add and I close it. And then something to remember is you have to select this environment that you added. So now I go back to my premise. So what if I did not remember how to type her name all the time? I would use to open up two curly brackets. I would type in Danny and here notice how in the URL the variables added and I'll click send and it should be the same. So think of this as shortcuts for you to make it easier. So for example, another trick is that if you Hover over this, there will be a new option where you can set as variable, and I would set as a new variable here. And I would type in URL, and I would choose the scope as my environment, and I will set variable. So by default, this URL was shown into the variable here. And if I go to this eyeball here, it will show the URL as this. So think of environments as different profiles. So at a former job, I had used postsman heavily because I had to manage several dozen profiles of clients across different environments. So for example, there are URLs for staging environments for sandbox environments for production environments. And then within the environment I had added keys. So I had added client IDs. I added client secret keys, so it was very hard to manage if I were to do on a notepad or a piece of paper. So instead I used the postman environment to make sure that it was simplified. So just for demo purposes, I would type in client ID, and the typical client ID is a long string of characters. I'm just having some grand keys. I would type in client secret, and again, this is a long string of characters and our update closes out. And then within the headers. This is where I've seen a lot of examples where we will ask for client ID. And then instead of me having to memorize the long string of characters, I will use the variables. Pretty cool. Okay, so now after environment, I want to go over code snippets. So on the middle upper right section there's a button called code. If you click it, it will show you all the code snippets. So this is one of my favorite features within Postman. So I did all this development within Postman and so what? Okay, now I want to transfer to my application. So within here I'm able to see dozens of program languages and different libraries and packages. So for example, if you want to run Curl commands, you can click here http. Java, JavaScript, even for myself. I like Python, so it uses the Python request library. I had put the URL here since this was a get request. The payload data is empty and I had some headers. In this example. I used the client ID and client secret and then the response. It shows that I'm using the get method the URL I had set earlier and I'm printing the response. So again, definitely check it out. If you have any languages that's not listed here, you can go contribute to our GitHub page to request it. So I have shown you the environment and code snippets. Next, I want to show you our feature where you can use documentation. Back in the Collections tab, I will go to Game of Thrones. I'll Hover and click on this arrow to the right side. I would click View and Web. So this opened up on my new browser here where a new documentation page was shown. So they say documentation is the new marketing. So this is what postwar can help with. Notice. On the left hand column I'm able to see the request I added here as well as a couple of descriptions. And on here I'm able to select my language I wanted to use. So I would choose Python request, and as I go here I can see the example request I had saved. Let's click expand and even an example response. It has also shown all the prams I had previously set as well as the description just to help your developer. So as you see, this is all done within seconds in postman. It's pretty neat. Let me go back to the app. Let me send this request. So earlier I had briefed on the JSON responses where I showed the response and how postal makes it pretty how you can see it's raw, even preview. This is what it looks like if you were to load this website on the browser and visualize. Since this is a one on one series, we won't go over too much into it, but know that you can add charts and graphs within your JSON response. So if you want to learn more, just click this button and open up our documentation. We also have some amazing videos. So some resources. So within the postman app. Earlier I mentioned within the launchpad there's a boot camp that you can go through. I highly recommend this. You'll learn a lot of new features that's just sitting there. You can level up the API game just by going through it within our Postman support center. This is where you can go. If you have any questions, there is a learning center to view postman docs, tutorials, videos, etc. You can report a bug or send a feature request. You can even check out the Postman Roadmap using Trello. And then next is the Postman Community forum. You can use this forum to ask questions, leave feedback, or even learn from other users within the Postman community. And last but not least the Postman API network that I showed earlier. Just discover, explore, and share other API collections from individuals and companies. So next, I just want to remind you to be able to get access to all the features. Definitely sign up for a Postman account. Some of the benefits are you can better collaborate with your team so you can sync workspaces across all your devices. You can publish beautiful documentation like I did earlier. You can use API network to access thousands of templates. You can even monitor and Mark your collections. So definitely sign up. It's definitely worth it. Formerly known as Postcon. Next year we're hosting the Postman Virtual Galaxy Conference, so we have a new date from February 2 to the fourth in 2021. Postman Galaxy will be the largest gathering of API users and developers. We want to inspire attendees of all the way APIs can create new experiences and streamline the business operations. So the first day is a paid session with hands on workshops, which is perfect for students and even advanced users. The second and third days are free for everyone. We have technical sessions and informational demos on what's new and what's coming. We will have a real astronaut present. So we also have other companies, including GitHub, Slack, Ping, Identity, and other cool API companies. I highly recommend you sign up it's free so you can learn a lot of cool API knowledge there. A couple of months ago we published our 2020 State of the API Report so some backstory. Last year we surveyed over 13,000 developers, testers executives and others in the API industry. We wanted to understand who was working with APIs and how they were getting the work done and where the industry is going. So what we found is that the industry is growing alcohol summed up best. The API ecosystem is expanding, investments are flooring and momentum is an API first philosophy and being embraced more and more. I highly recommend checking out our report to see what the latest trends and strategies are. So the link is postman. Comstateofapi, but we can send it over in a post Webinar survey which brings up the top here. So after this webinar ends, you'll receive a post Webinar survey. I highly recommend you to take the short survey to provide me feedback, requests, thoughts or comments to improve future Webinars. So before we head over to the Q and a session. Here are some takeaways. Postman is a one stop shop for all your API needs. It can do almost everything to help you build tests and deploy APIs. The Learning Center and Support Center has everything you need to find your information. Postman's Launchpad has the most of the top features within one tab to get you up running quickly and when in doubt, test it out yourself. The API network is like a marketplace or app store with free collections for you to run in postman. Okay, now to the tier session. Do you have any examples of other APIs without authentication? Yes. So let me show you right here. Let me go back to your postman app. So if I click on the upper left hand corner, click New. I will go to the templates tab. I will type in public Rest APIs and you'll see the public Rest APIs collections with over 300 imports. I was selected. So this collection was created by my colleague Kin where there's over a couple of dozen APIs without any request. So I had imported over and over here in the collections it sent public Rest APIs. So all these API do not need authentication. You can just feel free to test out and play with it yourself to see other cool examples. So this is very newbie friendly. I highly recommend for you to test it out. So let's see another question. Can you provide an example of code Snippets? Yeah. 1 second, let me go back to this request. So within the code snippets earlier. So again I clicked on the right hand side where it says code and the code snippets popped up. So let me pull up something browser real quick. So within Google I want to show you this cool check I have recently learned I Typed in online Python IDE for me. It's the second result for Web play. Click replicate for Python online compiler ID. I click it. This is a free tool to use to run code over a browser. So back to Postman, I will copy this code here and bring it back to this compiler and I will paste and I will run it in postman. So I will click run. So notice how the response is shared here. This is what it would look like if you run it within any IDE before it's clean. So let's go back to Postman to show you to compare. So if I had clicked send, it looks the same as the raw response here. Of course, you probably want a pretty view just to make it easier on eyes. Okay, next question. What's the difference between the postman app and postman agent? Okay, let me go back. Let me go to the postman website. So if you scroll all the way to the bottom, let me close these out. If you scroll all the way to the footer of the homepage, you'll see the download app section. Let me click it and then we have a couple of downloads for you. So something to mention is that now within postman you can launch it within the browser yourself. This is a really cool feature or you can use the app. It really depends on what your development needs are. So if you want to use on the browser, you just quickly log in and click Launch postman and postman open. However, if you want to just use the app, just go to the download page and click download app. So something to note is that if you want to use Postmark on the web, you have to download a desktop agent. So this desktop agent allows you to bypass the course cross object resource sharing limitations of browsers. It's a quick download and you can install it within minutes. And now you will not have any limitations within postman on the web. So again, if you go to any postman page, you scroll all the way down and it will be on the footer of download app to navigate here. Okay, next question. The visualizer looks interesting. Can you show me how it works? Yes. Let me see. So within the postman app. Let me clean up this a little bit. So earlier I had shown that you can pretty much set your responses into a format with visualizer. So if I click, learn how. I will open up the documentation for visualizing responses. So some cool examples I mentioned earlier you create charts and there's some code snippets available for you to copy and paste. And within these examples of this guide you can have a heat map. You can have charts or graphs. It really depends on your needs. So for my quick demo, let me go back up here. Let's see. So within this documentation I will select this code to copy and paste and bring it over to postman. So I will open up the test tab here to paste it. So before I do that, I want to see which data to return. So I will click Send and under pretty. Let's see. I want to choose the URL and name within this table, so I would change this preset code and name. And again, as I Scroll down to make sure it matches what I just changed and going back to the guide page, I will borrow one of the preset codes using the postman test scripts, so I will set the visualizer. I will copy this and go back to postman and I will paste it again under the test tab I had previously sent it. You see, they're pretty raw preview and visualize. So what if I click send now? I put it in a nice basic table just to make it easier on eyes. This is a super basic example. We have a lot of guides and resources. So check out the YouTube page and the YouTube channel or our learning center to see other cool examples we have. Let's see. Next question, do I need to familiar myself with more coding before using postman. So no, you don't need to know how to code to use postman. However, just knowing jobs can be useful, but it's not required. Next question, does postman support GraphQL? Yes, we have a template to test out GraphQL. So if you open up an upper left hand corner, click New and you scroll down, you select the templates tab you scroll down to working with GraphQL. We have a featured selection. We just click it. And our very own Joyce had published this documentation. Sorry collection. So we can click run and postman and the graph curl was imported successfully. So now I can play around with the graphic curl futures. So check out this guide. This collection is pretty cool. Let's see. Next question, are we still supporting Newman? Yes, we are supporting it. So it's on the documentation. That's a bit of an advanced topic. So we won't go over that today, but just check out our learning center for it. What's the difference between collections and APIs? So earlier I mentioned it where APIs is where you go and build or create an API. Whereas collections, you can run tests, you can Mark, endpoints, even monitor them. So it really depends on your needs. Are you a builder or you're a tester? So it looks like these are all the questions that we have. So thanks, guys. I hope you enjoyed this webinar. So you'll be receiving an email with this recording if you wanted. If I went over some of the examples too quickly, you can just follow along and see within the recorded session. So thanks, guys. Hope you have a good day. Bye.